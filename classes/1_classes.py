### 01/04/2020### Nadia Uddin### Creating our first class# Object oriented program - write classes to represent real world situations# new class = new type of object, allowing new instances of that type to be made# an instance is an object that is produced from a class object# class is like a factory that produces things# can't change the factory (class) but can change what it produces (intstance object)# First, the class is defined with a capital letter.# Brackets are empty because we're creating it from scratch.class Book():    """"A class to create a book"""# def __init___ is a method    def __init__(self, name, price, publisher):        """Initialise the name, price and publisher attributes"""        self.name = name        self.price = price        self.publisher = publisher    def hardback(self):        """Simulate a hardback book"""        print(self.name.title() + " is a hardback book.")    def paperback(self):        """Simulate a paperback book"""        print(self.name.title()) + " is a paperback book."    def ebook(self):        """Simulate an ebook"""        print(self.name.title()) + " is an ebook."# dunder methods = double underscore methods# dunder init method = initialiser method/constructor method# init is called when an instance is created#self refers to a particular instance